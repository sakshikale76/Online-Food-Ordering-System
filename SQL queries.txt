


mysql> create database skdb;
Query OK, 1 row affected (0.01 sec)

mysql> use skdb;
Database changed
mysql> CREATE TABLE Menu(
    ->     food_id INT ,
    ->     food_name VARCHAR(255) ,
    ->
    ->     food_type VARCHAR(255),
    ->     PRIMARY KEY(food_id)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql>
mysql> CREATE TABLE Managers(
    ->     manager_id INT ,
    ->     phone_number VARCHAR(13)
    ->
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql>
mysql>
mysql> CREATE TABLE Customer(
    ->     customer_id INT ,
    ->     food_id INT,
    ->
    ->     first_name VARCHAR(10) ,
    ->     last_name VARCHAR(10) ,
    ->     phone_number VARCHAR(13) ,
    ->     email_address VARCHAR(30)
    ->
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql>
mysql>
mysql> CREATE TABLE Reservation(
    ->     reservation_id INT PRIMARY KEY,
    ->     customer_id INT,
    ->     manager_id INT,
    ->     reservation_date_time TIMESTAMP NOT NULL
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql>
mysql>
mysql>
mysql>
mysql> CREATE TABLE Discount(
    ->
    ->     discount_id INT PRIMARY KEY,
    ->
    ->     amount DECIMAL(10, 2) NOT NULL,
    ->     status VARCHAR(8) NOT NULL CHECK (status IN('Active', 'Inactive'))
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql>
mysql>
mysql>
mysql>
mysql> CREATE TABLE ItemNames (
    ->
    ->
    ->     item_name VARCHAR(20)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql>
mysql>
mysql> CREATE TABLE Vouchers (
    ->     voucher_code INT PRIMARY KEY,
    ->     discount_id INT,
    ->     FOREIGN KEY (discount_id) REFERENCES Discount(discount_id)
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql>
mysql>
mysql> CREATE TABLE Orders (
    ->     order_id int,
    ->     customer_id INT,
    ->
    ->     discount_id INT,
    ->     order_date_time TIMESTAMP NOT NULL,
    ->     status VARCHAR(10) NOT NULL CHECK (status IN('delivered', 'Pending')),
    ->     payment_method VARCHAR(10) NOT NULL CHECK (payment_method IN('card', 'cash')),
    ->     total_amount int ,
    ->      price int ,
    ->      quantity int
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql>
mysql>
mysql> CREATE TABLE Manage_order (
    ->     manager_id INT,
    ->     order_id INT,
    ->     status VARCHAR(10) NOT NULL CHECK (status IN('taken', 'completed'))
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql>
mysql>
mysql>
mysql> INSERT INTO Menu (food_id, food_name,  food_type)
    -> VALUES (1, 'Biryani', 'junk');
Query OK, 1 row affected (0.01 sec)

mysql>
mysql> INSERT INTO Menu (food_id, food_name, food_type)
    -> VALUES (2, 'Karahi',  'junk');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> INSERT INTO Menu (food_id, food_name,  food_type)
    -> VALUES (3, 'Pizza',  'fast');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> INSERT INTO Menu (food_id, food_name,  food_type)
    -> VALUES (4, 'Burger',  'fast');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> INSERT INTO Menu (food_id, food_name,  food_type)
    -> VALUES (5, 'Nihari',  'junk');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> INSERT INTO Menu (food_id, food_name,  food_type)
    -> VALUES (6, 'Pulao',  'junk');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> INSERT INTO Menu (food_id, food_name, food_type)
    -> VALUES (7, 'Tikka',  'junk');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> INSERT INTO Menu (food_id, food_name,  food_type)
    -> VALUES (8, 'Sandwich',  'fast');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> INSERT INTO Menu (food_id, food_name,  food_type)
    -> VALUES (9, 'Fries',  'fast');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql>
mysql> INSERT INTO Managers (manager_id,  phone_number)
    -> VALUES (1, '+921234567890' );
Query OK, 1 row affected (0.01 sec)

mysql>
mysql> INSERT INTO Managers (manager_id, phone_number)
    -> VALUES (2, '+929876543210');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql>
mysql> INSERT INTO Customer (customer_id, food_id, first_name, last_name, phone_number, email_address)
    -> VALUES (1, 3, 'Sana', 'Khan', '+923456789012', 'sana.khan@example.com');
Query OK, 1 row affected (0.01 sec)

mysql>
mysql> INSERT INTO Customer (customer_id, food_id, first_name, last_name, phone_number, email_address)
    -> VALUES (2, 4, 'Usman', 'Ali', '+927890123456', 'usman.ali@example.com');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> INSERT INTO Customer (customer_id, food_id, first_name, last_name, phone_number, email_address)
    -> VALUES (3, 1, 'Sakshi', 'Kale', '+929876543210', 'fatima.khan@example.com');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> INSERT INTO Customer (customer_id, food_id, first_name, last_name, phone_number, email_address)
    -> VALUES (4, 3, 'Hassan', 'Ali', '+928765432109', 'hassan.ali@example.com');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> INSERT INTO Customer (customer_id, food_id, first_name, last_name, phone_number, email_address)
    -> VALUES (5, 2, 'Sarvdnya', 'Jawale', '+927654321098', 'ayesha.ahmed@example.com');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql>
mysql> INSERT INTO Reservation (reservation_id, customer_id, manager_id, reservation_date_time)
    -> VALUES (1, 2, 1, TIMESTAMP '2023-05-12 10:30:00');
Query OK, 1 row affected (0.01 sec)

mysql>
mysql> INSERT INTO Reservation (reservation_id, customer_id, manager_id, reservation_date_time)
    -> VALUES (2, 1, 2, TIMESTAMP '2023-05-12 11:00:00');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql>
mysql>
mysql>
mysql>
mysql>
mysql>
mysql> INSERT INTO Discount (discount_id, amount, status)
    -> VALUES (1, 10.00, 'Active');
Query OK, 1 row affected (0.01 sec)

mysql>
mysql> INSERT INTO Discount (discount_id,  amount, status)
    -> VALUES (2,  20.00, 'Active');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql>
mysql>
mysql>
mysql>
mysql> INSERT INTO ItemNames ( item_name)
    -> VALUES (' Pizza');
Query OK, 1 row affected (0.01 sec)

mysql>
mysql> INSERT INTO ItemNames ( item_name)
    -> VALUES ( 'pulao ');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql>
mysql> INSERT INTO Vouchers (voucher_code, discount_id)
    -> VALUES (1, 2);
Query OK, 1 row affected (0.01 sec)

mysql>
mysql> INSERT INTO Vouchers (voucher_code, discount_id)
    -> VALUES (2, 1);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql>
mysql>
mysql>
mysql> INSERT INTO Orders (order_id, customer_id,  discount_id, order_date_time, status, payment_method, total_amount,price,quantity)
    -> VALUES (1, 3, 2, TIMESTAMP '2023-05-12 12:30:00',  'delivered', 'cash', 650,400,2);
Query OK, 1 row affected (0.01 sec)

mysql>
mysql> INSERT INTO Orders (order_id, customer_id,  discount_id, order_date_time,  status, payment_method, total_amount,price,quantity)
    -> VALUES (2, 4, 1, TIMESTAMP '2023-05-12 13:00:00',  'Pending', 'card', 400,700,1);
Query OK, 1 row affected (0.00 sec)

mysql>
mysql>
mysql> INSERT INTO Manage_order (manager_id, order_id, status)
    -> VALUES (1, 2, 'taken');
Query OK, 1 row affected (0.01 sec)

mysql>
mysql> INSERT INTO Manage_order (manager_id, order_id, status)
    -> VALUES (2, 1, 'completed');
Query OK, 1 row affected (0.00 sec)

mysql>
mysql> CREATE TABLE Orders (
    ->     order_id int,
    ->     customer_id INT,
    ->
    ->     discount_id INT,
    ->     order_date_time TIMESTAMP NOT NULL,
    ->     status VARCHAR(10) NOT NULL CHECK (status IN('delivered', 'Pending')),
    ->     payment_method VARCHAR(10) NOT NULL CHECK (payment_method IN('card', 'cash')),
    ->     total_amount int ,
    ->      price int ,
    ->      price int ,  ;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 11
mysql> create table bef_update(order_id int,
    ->     customer_id INT,
    ->
    ->     discount_id INT,
    ->     order_date_time TIMESTAMP NOT NULL,
    ->     status VARCHAR(10) NOT NULL CHECK (status IN('delivered', 'Pending')),
    ->     payment_method VARCHAR(10) NOT NULL CHECK (payment_method IN('card', 'cash')),
    ->     total_amount int ,
    ->      price int ,
    ->      quantity int
    -> );
Query OK, 0 rows affected (0.05 sec)

mysql> delimiter //
mysql>
mysql>    create trigger before_dis
    ->     before update
    ->     on Orders
    ->     for each row
    ->     begin
    ->     insert into bdiscount
    ->     set customer_id = old.customer_id,
    ->     total_amount = old.total_amount,
    ->     price = old.price,
    ->      quantity = old.quantity,
    ->      payment_method = old.payment_method,
    ->      order_date_time = old.order_date_time,
    ->      status = old.status;
    ->      end;
    -> //
Query OK, 0 rows affected (0.02 sec)

mysql> drop trigger before_dis;
    -> //
Query OK, 0 rows affected (0.02 sec)


//trigger
mysql> create trigger bu
    ->     before update
    ->     on Orders
    ->     for each row
    ->     begin
    ->     insert into bef_update
    ->     set customer_id = old.customer_id,
    ->     total_amount = old.total_amount,
    ->     price = old.price,
    ->      quantity = old.quantity,
    ->      payment_method = old.payment_method,
    ->      order_date_time = old.order_date_time,
    ->      status = old.status;
    ->      end;
    -> //
Query OK, 0 rows affected (0.02 sec)

mysql> select * from Orders;
    -> //
+----------+-------------+-------------+---------------------+-----------+----------------+--------------+-------+----------+
| order_id | customer_id | discount_id | order_date_time     | status    | payment_method | total_amount | price | quantity |
+----------+-------------+-------------+---------------------+-----------+----------------+--------------+-------+----------+
|        1 |           3 |           2 | 2023-05-12 12:30:00 | delivered | cash           |          650 |   400 |        2 |
|        2 |           4 |           1 | 2023-05-12 13:00:00 | Pending   | card           |          400 |   700 |        1 |
+----------+-------------+-------------+---------------------+-----------+----------------+--------------+-------+----------+
2 rows in set (0.01 sec)

mysql> update Orders set total_amount=total_amount-2;
    -> //
Query OK, 2 rows affected (0.02 sec)
Rows matched: 2  Changed: 2  Warnings: 0

mysql> select * from Orders;
    -> //
+----------+-------------+-------------+---------------------+-----------+----------------+--------------+-------+----------+
| order_id | customer_id | discount_id | order_date_time     | status    | payment_method | total_amount | price | quantity |
+----------+-------------+-------------+---------------------+-----------+----------------+--------------+-------+----------+
|        1 |           3 |           2 | 2023-05-12 12:30:00 | delivered | cash           |          648 |   400 |        2 |
|        2 |           4 |           1 | 2023-05-12 13:00:00 | Pending   | card           |          398 |   700 |        1 |
+----------+-------------+-------------+---------------------+-----------+----------------+--------------+-------+----------+
2 rows in set (0.00 sec)

mysql> select * from bef_update;
    -> //
+----------+-------------+-------------+---------------------+-----------+----------------+--------------+-------+----------+
| order_id | customer_id | discount_id | order_date_time     | status    | payment_method | total_amount | price | quantity |
+----------+-------------+-------------+---------------------+-----------+----------------+--------------+-------+----------+
|     NULL |           3 |        NULL | 2023-05-12 12:30:00 | delivered | cash           |          650 |   400 |        2 |
|     NULL |           4 |        NULL | 2023-05-12 13:00:00 | Pending   | card           |          400 |   700 |        1 |
+----------+-------------+-------------+---------------------+-----------+----------------+--------------+-------+----------+
2 rows in set (0.00 sec)

mysql> SELECT
    ->   m.food_type,
    ->   COUNT(*) AS order_count,
    ->   SUM(o.total_amount) AS total_revenue,
    ->   AVG(o.total_amount) AS average_amount_per_order
    -> FROM
    ->   Menu m
    -> JOIN
    ->   Customer c ON m.food_id = c.food_id
    -> JOIN
    ->   Orders o ON c.customer_id = o.customer_id
    -> GROUP BY
    ->   m.food_type;
    -> //
+-----------+-------------+---------------+--------------------------+
| food_type | order_count | total_revenue | average_amount_per_order |
+-----------+-------------+---------------+--------------------------+
| junk      |           1 |           648 |                 648.0000 |
| fast      |           1 |           398 |                 398.0000 |
+-----------+-------------+---------------+--------------------------+
2 rows in set (0.01 sec)

mysql> SELECT
    ->   first_name,
    ->   last_name
    -> FROM
    ->   Customer
    -> WHERE
    ->   food_id IN (
    ->     SELECT
    ->       food_id
    ->     FROM
    ->       Menu
    ->     WHERE
    ->       food_type = 'junk'
    ->   );
    -> //
+------------+-----------+
| first_name | last_name |
+------------+-----------+
| Sakshi     | Kale      |
| Sarvdnya   | Jawale    |
+------------+-----------+
2 rows in set (0.00 sec)

//cursor
mysql> create procedure proc()
    -> begin
    -> declare finished int default 0;
    -> declare i int;
    -> declare n varchar(10);
    -> declare cursor2 cursor for select order_id,payment_method from Orders;
    -> declare continue handler for not found set finished=1;
    -> open cursor2;
    -> loop1:loop fetch cursor2 into i,n;
    -> if finished then leave loop1;
    -> end if;
    -> select i,n;
    -> end loop;
    -> close cursor2;
    -> end//
Query OK, 0 rows affected (0.01 sec)

mysql> call proc();
    -> //
+------+------+
| i    | n    |
+------+------+
|    1 | cash |
+------+------+
1 row in set (0.00 sec)

+------+------+
| i    | n    |
+------+------+
|    2 | card |
+------+------+
1 row in set (0.03 sec)

Query OK, 0 rows affected (0.07 sec)

//simple view
mysql> create view s_view as select * from Menu;
Query OK, 0 rows affected (0.02 sec)

mysql> select * from s_view;
+---------+-----------+-----------+
| food_id | food_name | food_type |
+---------+-----------+-----------+
|       1 | Biryani   | junk      |
|       2 | Karahi    | junk      |
|       3 | Pizza     | fast      |
|       4 | Burger    | fast      |
|       5 | Nihari    | junk      |
|       6 | Pulao     | junk      |
|       7 | Tikka     | junk      |
|       8 | Sandwich  | fast      |
|       9 | Fries     | fast      |
+---------+-----------+-----------+
9 rows in set (0.01 sec)

//complex view
mysql> create view c_view as select * from Menu union select * from Discount;
Query OK, 0 rows affected (0.02 sec)

mysql> select * from c_view;
+---------+-----------+-----------+
| food_id | food_name | food_type |
+---------+-----------+-----------+
|       1 | Biryani   | junk      |
|       2 | Karahi    | junk      |
|       3 | Pizza     | fast      |
|       4 | Burger    | fast      |
|       5 | Nihari    | junk      |
|       6 | Pulao     | junk      |
|       7 | Tikka     | junk      |
|       8 | Sandwich  | fast      |
|       9 | Fries     | fast      |
|       1 | 10.00     | Active    |
|       2 | 20.00     | Active    |
+---------+-----------+-----------+
11 rows in set (0.01 sec)

// procedure
mysql> delimiter //
mysql> create procedure get_Orders()
    -> begin
    -> select * from Orders;
    -> end//
Query OK, 0 rows affected (0.01 sec)

mysql> call get_Orders();
    -> //
+----------+-------------+-------------+---------------------+-----------+----------------+--------------+-------+----------+
| order_id | customer_id | discount_id | order_date_time     | status    | payment_method | total_amount | price | quantity |
+----------+-------------+-------------+---------------------+-----------+----------------+--------------+-------+----------+
|        1 |           3 |           2 | 2023-05-12 12:30:00 | delivered | cash           |          648 |   400 |        2 |
|        2 |           4 |           1 | 2023-05-12 13:00:00 | Pending   | card           |          398 |   700 |        1 |
+----------+-------------+-------------+---------------------+-----------+----------------+--------------+-------+----------+
2 rows in set (0.00 sec)

Query OK, 0 rows affected (0.07 sec)

